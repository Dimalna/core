/// <reference types="node" />
import Arweave from "arweave";
import { JWKInterface } from "arweave/node/lib/wallet";
import { Contract, Wallet } from "ethers";
import { BlockInstructions } from "./faces";
import { CLI } from "./utils";
import client from "prom-client";
export * from "./utils";
export * from "./faces";
export * from "./utils/helpers";
declare class KYVE {
    protected pool: Contract;
    protected runtime: string;
    protected version: string;
    protected stake: string;
    protected commission: string;
    protected wallet: Wallet;
    protected keyfile?: JWKInterface;
    protected name: string;
    protected gasMultiplier: string;
    protected poolState: any;
    protected runMetrics: boolean;
    protected diskSpace: number;
    protected db: any;
    protected arweave: Arweave;
    static metrics: typeof client;
    constructor(cli?: CLI);
    start(): Promise<void>;
    private run;
    worker(): Promise<void>;
    requestWorkerBatch(workerHeight: number): Promise<any[]>;
    createBundle(blockInstructions: BlockInstructions): Promise<any[]>;
    validate(uploadBundle: Buffer[], uploadBytes: number, downloadBundle: Buffer[], downloadBytes: number): Promise<boolean>;
    private getBlockProposal;
    private getBlockInstructions;
    private uploadBundleToArweave;
    private submitBlockProposal;
    private waitForNextBlockInstructions;
    private vote;
    private logNodeInfo;
    private setupMetrics;
    private fetchPoolState;
    private setupDB;
    private checkIfNodeIsValidator;
    private setupNodeStake;
    private selfStake;
    private selfUnstake;
    private setupNodeCommission;
    private calculateUploaderWaitingTime;
    private generateRandomName;
}
export default KYVE;
