import { BlockInstructions } from "./faces";
import { CLI } from "./utils";
import client from "prom-client";
export * from "./utils";
declare class KYVE {
    private pool;
    private runtime;
    private version;
    private stake;
    private commission;
    private wallet;
    private keyfile?;
    private name;
    private gasMultiplier;
    private poolState;
    static metricClient: typeof client;
    private arweave;
    constructor(cli?: CLI);
    start(): Promise<void>;
    private run;
    createBundle(config: any, blockInstructions: BlockInstructions): Promise<any>;
    validate(uploadBundle: any[], uploadBytes: number, downloadBundle: any[], downloadBytes: number): Promise<boolean>;
    private getBlockProposal;
    private getBlockInstructions;
    private uploadBundleToArweave;
    private submitBlockProposal;
    private waitForNextBlockInstructions;
    private vote;
    private logNodeInfo;
    private setupMetrics;
    private fetchPoolState;
    private checkIfNodeIsValidator;
    private setupNodeStake;
    private selfStake;
    private selfUnstake;
    private setupNodeCommission;
    private calculateUploaderWaitingTime;
}
export default KYVE;
